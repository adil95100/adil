#!groovy
pipeline {
    agent any

    options {
    buildDiscarder(logRotator(numToKeepStr: '5'))
    disableConcurrentBuilds()
  }
    environment {
        def build = readYaml file: "${WORKSPACE}/IdeaProjects/build.yaml"

        nom = "${build.Lanceur.nom}"
        prenom = "${build.Lanceur.prenom}"
        age = "${build.Lanceur.age}"
        domaine = "${build.Lanceur.domaine}"
                }


    parameters{
             string(name: 'PERSON', defaultValue: 'Mr MAMOUNE', description: 'Mes Premiers pas sur la programation DevOps')
    }


stages {

        stage('Info Lancement de la Pipline') {
            steps {
        echo "Le nom de lanceur de la pipline ======> ${env.nom}"
        echo "Le prenom de lanceur de la pipline ======> ${env.prenom}"
        echo "L age de lanceur de la pipline ======> ${env.age}"
        echo "Le domaine de lanceur de la pipline ======> ${env.domaine}"
                   }
                                              }
        stage('Build') {
            steps {

                 echo "Building By-ttt>  ${params.PERSON}"
            script {
                    def builders = ['Adil', 'Rachid', 'Youssef', 'Amine', 'Paul', 'Pascal']
                    for (int i = 0; i < builders.size(); ++i) {
                        echo "Testing the ${builders[i]} -----> builder"
                    }
                        }
            }

        }
        stage('Test') {
            steps {
                echo "Testing Bytt ${params.PERSON}"
                }
        }
        stage('Deploy') {
            steps {
                echo "Deploying By ${params.PERSON}"
            }
        }

        stage('Verification de Script Shell'){
            steps {
                sh " ${WORKSPACE}/IdeaProjects/script_test.sh"
            }
        }
    }

     post {
         success {
            sh 'echo "Success !"'
            rocketSend channel: 'c4-platine', message: 'Pipeline is in success', emoji:':thumbsup:'
        }

        failure {
            sh 'echo "Failure !"'
            rocketSend channel: 'c4-platine', message: 'Pipeline is in failure', emoji:':thumbsdown:'
        }

        unstable {
            sh 'echo "Unstable !"'
            

        }
        }
      }




